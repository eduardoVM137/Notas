@model List<Detalle_Nota>
@{
    ViewData["Title"] = "Mostrar";
}

<div class="container">
    <div class="card">
        <div class="card-header">
            @if (ViewBag.VerDetalle)
            {
                <div class="nota-header">
                    <h3 class="nota-titulo">@ViewBag.MiNota.strTitulo</h3>
                    <div class="nota-meta">
                        <button type="button" class="btn btn-success btn-sm boton-nuevo-dtnota">Nueva Nota</button>
                    </div>
                </div>
                <span class="badge badge-pill badge-dark">@ViewBag.MiNota.refCategoria.strTitulo</span>
            }
        </div>
        <div class="card-body">
            @if (ViewBag.VerDetalle)
            {
                <div class="nota-details">
                    <p>Comentarios: @ViewBag.MiNota.strComentario</p>
                    <div class="usuario-fecha">
                        <p>
                            <span class="usuario">@ViewBag.MiNota.refUsuario.strNombre</span>
                            <span class="fecha">@ViewBag.MiNota.dtFecha_Creacion.ToString("dd/MM/yyyy")</span>
                        </p>
                    </div>
                </div>
            }

            <div class="filter-container mb-3">
                <select class="form-select" id="estadoFilter">
                    <option value="todos">Todos</option>
                    <option value="sin empezar">Sin empezar</option>
                    <option value="en progreso">En progreso</option>
                    <option value="finalizado">Finalizado</option>
                </select>
            </div>

            <div class="d-flex flex-wrap justify-content-between" id="kanbanBoard">
                @foreach (var estado in new[] { "sin empezar", "en progreso", "finalizado" })
                {
                    <div class="kanban-column">
                        <h4>@estado.ToUpper()</h4>
                        @foreach (var item in Model.Where(nota => nota.strEstado.Equals(estado, StringComparison.OrdinalIgnoreCase)))
                        {
                            <div class="card mb-3 mx-2 kanban-card" data-estado="@item.strEstado.ToLower()">
                                <div class="card-header">Título Nota: @item.refNnota.strTitulo</div>
                                <div class="card-body">
                                    <h5 class="card-title">@item._strDescripcion</h5>
                                    <time style="font-size: small; color:crimson">@item._dtFecha</time>
                                    <p style="font-size: small;">Acciones:</p>

                                    @if (item.strEstado == "sin empezar")
                                    {
                                        <button class="btn btn-primary btn-sm boton-cambiar-dtnota" data-iddt_nota="@item._intidDetalle_Nota" data-estado="en progreso">Iniciar</button>
                                       
                                    }
                                    else if (item.strEstado == "en progreso")
                                    {
                                        <button class="btn btn-warning btn-sm boton-cambiar-dtnota" data-iddt_nota="@item._intidDetalle_Nota" data-estado="sin empezar">Pausar</button>
                                        <button class="btn btn-success btn-sm boton-cambiar-dtnota" data-iddt_nota="@item._intidDetalle_Nota" data-estado="finalizado">Completar</button>
                                    }
                                    else if (item.strEstado == "finalizado")
                                    {
                                        <button class="btn btn-info btn-sm boton-cambiar-dtnota" data-iddt_nota="@item._intidDetalle_Nota" data-estado="sin empezar">Reabrir</button>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>
 

<style>
    .nota-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .nota-titulo {
        width: auto;
        margin: 0;
    }

    .nota-meta {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    .usuario-fecha {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

    .usuario {
        font-size: 14px;
        color: #666;
        margin-right: 10px;
    }

    .fecha {
        font-size: 12px;
        color: #888;
    }

    .boton-nuevo-dtnota {
        margin-top: 5px;
    }

    .filter-container {
        text-align: right;
    }

    .kanban-board {
        display: flex;
        gap: 1rem;
    }

    .kanban-column {
        flex: 0 0 32%; /* Ajuste el ancho como desee, 32% es para 3 columnas */
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 0.5rem;
        overflow: auto;
        max-height: 600px;
    }

    .kanban-card {
        border-left: 3px solid #ccc; /* Color por defecto, se cambia con clases */
        margin-bottom: 0.5rem;
    }

        .kanban-card .card-header {
            background-color: #e9ecef;
        }

        /* Colores para los bordes de las tarjetas según estado */
        .kanban-card[data-estado="sin empezar"] {
            border-left-color: #dc3545;
        }

        .kanban-card[data-estado="en progreso"] {
            border-left-color: #ffc107;
        }

        .kanban-card[data-estado="finalizado"] {
            border-left-color: #28a745;
        }

</style>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const estadoFilter = document.getElementById('estadoFilter');
            const tarjetas = document.querySelectorAll('.kanban-card');

            estadoFilter.addEventListener('change', function () {
                const selectedEstado = this.value.toLowerCase();
                tarjetas.forEach(tarjeta => {
                    const estadoTarjeta = tarjeta.dataset.estado;
                    if (selectedEstado === 'todos' || estadoTarjeta === selectedEstado) {
                        tarjeta.style.display = '';
                    } else {
                        tarjeta.style.display = 'none';
                    }
                });
            });
        });
    </script>
}